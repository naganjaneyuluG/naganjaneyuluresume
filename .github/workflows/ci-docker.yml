name: Docker Build and Trivy Vulnerability Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  docker-build-and-scan:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository code
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Build Docker Image
      - name: Docker Build
        env:
          IMAGE_NAME: my-ecr-repository-name    # Dummy ECR repository name
          IMAGE_TAG: ${{ github.sha }}
        run: |
          set -euxo pipefail
          DOCKER_IMAGE=${IMAGE_NAME}:${IMAGE_TAG}
          docker build -t ${DOCKER_IMAGE} .
          docker images  # List images to confirm that the image is built

      # Run Trivy vulnerability scanner for Docker image
      - name: Run Trivy vulnerability scanner for Docker image
        id: trivy-scan-npm
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}'
          scan-type: image   # Scan the Docker image for vulnerabilities
          hide-progress: false
          format: 'table'
          vuln-type: 'library,os'
          exit-code: '0'
          ignore-unfixed: false
          severity: 'HIGH,CRITICAL'
          output: trivy.txt
        env:
          IMAGE_NAME: my-ecr-repository-name    # Dummy ECR repository name
          IMAGE_TAG: ${{ github.sha }}
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db:2

      # Publish Trivy Output to Summary
      - name: Publish Trivy Output to Summary
        run: |
          if [[ -s trivy.txt ]]; then
              {
                  echo "### Docker Security Output"
                  echo "<details><summary>Click to expand</summary>"
                  echo ""
                  echo '```output'
                  cat trivy.txt
                  echo '```'
                  echo "</details>"
              } >> $GITHUB_STEP_SUMMARY
          fi
      # Docker login to Docker Hub or Docker Scout
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      # Run Docker Scout for CVE scanning and recommendations
      - name: Docker Scout Scan
        id: docker-scout
        uses: docker/scout-action@v1
        with:
          command: cves,recommendations,compare
          to-latest: true
          ignore-base: true
          ignore-unchanged: true
          only-fixed: true
        env:
          IMAGE_NAME: my-ecr-repository-name    # Dummy ECR repository name
          IMAGE_TAG: ${{ github.sha }}
